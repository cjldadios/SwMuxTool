# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SwMuxTool.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 700)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        MainWindow.setMinimumSize(QtCore.QSize(800, 700))
        MainWindow.setMaximumSize(QtCore.QSize(800, 700))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/Images/Analog Icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setToolTipDuration(-9)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color = rgb(255, 255, 255)")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btnFind = QtWidgets.QPushButton(self.centralwidget)
        self.btnFind.setGeometry(QtCore.QRect(560, 10, 141, 31))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btnFind.sizePolicy().hasHeightForWidth())
        self.btnFind.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnFind.setFont(font)
        self.btnFind.setObjectName("btnFind")
        self.btnExit = QtWidgets.QPushButton(self.centralwidget)
        self.btnExit.setGeometry(QtCore.QRect(710, 630, 75, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.btnExit.setFont(font)
        self.btnExit.setObjectName("btnExit")



        # Third option
        self.comboThird = QtWidgets.QComboBox(self.centralwidget)
        self.comboThird.setGeometry(QtCore.QRect(10, 190, 231, 31))
            # rectangle = QRect(x, y, w, h);
            # where, from the upper left window coner, x is the x-axis to the right,
            # y is the y-axis downward, w and h is the rectangle width and height 
        font = QtGui.QFont()
        font.setFamily("Times New Roman") # 
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.comboThird.setFont(font)
        self.comboThird.setObjectName("comboThird")
        self.comboThird.addItem("")
        self.comboThird.addItem("")
        self.comboThird.addItem("")
        # Uncomment this line to enable the third option combo box
        self.comboThird.hide()


        self.comboAnalog = QtWidgets.QComboBox(self.centralwidget)
        self.comboAnalog.setGeometry(QtCore.QRect(10, 60, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.comboAnalog.setFont(font)
        self.comboAnalog.setObjectName("comboAnalog")
        self.comboAnalog.addItem("")
        self.comboAnalog.addItem("")
        self.comboAnalog.addItem("")
        self.comboAnalog.addItem("")
        self.comboAnalog.addItem("")
        self.comboAnalog.addItem("")
        self.comboAnalog.addItem("")


        self.btnGenerate = QtWidgets.QPushButton(self.centralwidget)
        self.btnGenerate.setGeometry(QtCore.QRect(350, 260, 171, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnGenerate.setFont(font)
        self.btnGenerate.setObjectName("btnGenerate")
        self.btnProduct = QtWidgets.QPushButton(self.centralwidget)
        self.btnProduct.setGeometry(QtCore.QRect(520, 180, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.btnProduct.setFont(font)
        self.btnProduct.setObjectName("btnProduct")
        self.comboDigital = QtWidgets.QComboBox(self.centralwidget)
        self.comboDigital.setGeometry(QtCore.QRect(10, 130, 231, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.comboDigital.setFont(font)
        self.comboDigital.setObjectName("comboDigital")
        self.comboDigital.addItem("")
        self.comboDigital.addItem("")
        self.comboDigital.addItem("")
        self.comboTest = QtWidgets.QComboBox(self.centralwidget)
        self.comboTest.setGeometry(QtCore.QRect(80, 260, 261, 31))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.comboTest.setFont(font)
        self.comboTest.setObjectName("comboTest")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.comboTest.addItem("")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 220, 801, 20))
        self.line.setLineWidth(3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.lblSwitchPic = QtWidgets.QLabel(self.centralwidget)
        self.lblSwitchPic.setGeometry(QtCore.QRect(300, 30, 171, 171))
        self.lblSwitchPic.setPixmap(QtGui.QPixmap(":/Images/Images/Switch.png"))
        self.lblSwitchPic.setObjectName("lblSwitchPic")
        self.lblAnswer = QtWidgets.QLabel(self.centralwidget)
        self.lblAnswer.setGeometry(QtCore.QRect(490, 40, 291, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblAnswer.setFont(font)
        self.lblAnswer.setAlignment(QtCore.Qt.AlignCenter)
        self.lblAnswer.setObjectName("lblAnswer")
        self.lblBlock = QtWidgets.QLabel(self.centralwidget)
        self.lblBlock.setGeometry(QtCore.QRect(10, 270, 4, 10))
        self.lblBlock.setText("")
        self.lblBlock.setPixmap(QtGui.QPixmap(":/Images/Images/Test Picture 2.png"))
        self.lblBlock.setObjectName("lblBlock")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(310, 310, 201, 81))
        self.textEdit.setObjectName("textEdit")
        self.lblDescription = QtWidgets.QLabel(self.centralwidget)
        self.lblDescription.setGeometry(QtCore.QRect(490, 70, 291, 101))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.lblDescription.setFont(font)
        self.lblDescription.setText("")
        self.lblDescription.setTextFormat(QtCore.Qt.RichText)
        self.lblDescription.setAlignment(QtCore.Qt.AlignCenter)
        self.lblDescription.setObjectName("lblDescription")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 18))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

       
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Switch and Multiplexer Finder"))
        self.btnFind.setText(_translate("MainWindow", "Find Switch"))
        self.btnExit.setText(_translate("MainWindow", "Exit"))
        self.comboAnalog.setItemText(0, _translate("MainWindow", "Analog Input Range"))
        self.comboAnalog.setItemText(1, _translate("MainWindow", "±15"))
        self.comboAnalog.setItemText(2, _translate("MainWindow", "±5"))
        self.comboAnalog.setItemText(3, _translate("MainWindow", "+12"))
        self.comboAnalog.setItemText(4, _translate("MainWindow", "+5"))
        self.comboAnalog.setItemText(5, _translate("MainWindow", "+3.3"))
        self.comboAnalog.setItemText(6, _translate("MainWindow", "+3"))
        self.btnGenerate.setText(_translate("MainWindow", "Generate Circuit"))
        self.btnProduct.setText(_translate("MainWindow", "Open Product Page"))
        self.comboDigital.setItemText(0, _translate("MainWindow", "Control Input Range"))
        self.comboDigital.setItemText(1, _translate("MainWindow", "Max 0.8 V & Min 2.0 V"))
        self.comboDigital.setItemText(2, _translate("MainWindow", "Max 0.8 V & Min 2.4 V"))

        # Third option
        self.comboThird.setItemText(0, _translate("MainWindow", "Third Input Option"))
        self.comboThird.setItemText(1, _translate("MainWindow", "Option 1"))
        self.comboThird.setItemText(2, _translate("MainWindow", "Option 2"))
        self.comboThird.setItemText(3, _translate("MainWindow", "Option 3"))

        self.comboTest.setItemText(0, _translate("MainWindow", " (Select Test Circuit)"))
        self.comboTest.setItemText(1, _translate("MainWindow", " On Resistance"))
        self.comboTest.setItemText(2, _translate("MainWindow", " Off Leakage"))
        self.comboTest.setItemText(3, _translate("MainWindow", " On Leakage"))
        self.comboTest.setItemText(4, _translate("MainWindow", " Off Isolation"))
        self.comboTest.setItemText(5, _translate("MainWindow", " Channel-to-Channel Crosstalk"))
        self.comboTest.setItemText(6, _translate("MainWindow", " Bandwidth"))
        self.comboTest.setItemText(7, _translate("MainWindow", " THD+Noise"))
        self.comboTest.setItemText(8, _translate("MainWindow", " Switching Times"))
        self.comboTest.setItemText(9, _translate("MainWindow", " Break-Before-Make Time Delay"))
        self.comboTest.setItemText(10, _translate("MainWindow", " Charge Injection"))
        self.lblSwitchPic.setText(_translate("MainWindow", "<html><head/><body><p><img src=\":/Images/Switch.png\"/></p></body></html>"))
        self.lblAnswer.setText(_translate("MainWindow", "No Product Selected Yet"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:8.25pt;\">LTspice screenshot here... if 2x clicked open ltspice or add another button. can be zoomed?</span></p></body></html>"))
import resource_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
